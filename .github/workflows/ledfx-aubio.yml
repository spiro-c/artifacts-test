# I am a workflow that demonstrates how to output the different context objects

name: Test aubio-Ledfx Builds

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build aubio-Ledfx distribution 📦 on ${{ matrix.os }} with Python ${{ matrix.python-version }} 
    runs-on: ${{ matrix.os }} # Use the 'os' variable from the matrix
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-15-intel] # Define operating systems
        python-version: ["3.10", "3.11", "3.12", "3.13"] # Define Python versions

    steps:
      - uses: actions/checkout@v5 # Checkout your repository
        with:
          repository: LedFx/aubio-ledfx
          ref: master
    
      - name: Install uv
        uses: astral-sh/setup-uv@v7 # Action to set up uv
        with:
          enable-cache: true      
    
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }} # Action to set up Python
      - name: Build a binary wheel and a source tarball
        run: uv build --wheel --sdist --force-pep517 # Command to build the package
    
      - name: Store the distribution packages on ${{ matrix.os }} with Python ${{ matrix.python-version }}
        uses: actions/upload-artifact@v4
        with:
            name: python-package-distributions-${{ matrix.os }}-py${{ matrix.python-version }}
            path: dist/
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
#    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/<package-name>  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions-*
        path: dist/
        merge-multiple: true
    # - name: Publish distribution 📦 to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    - name: List files in dist/
      run: ls -la dist/
