# I am a workflow that demonstrates how to output the different context objects

name: Test Macos Arm64 New Build

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  macos-arm:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash -x {0}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Check out code from GitHub
        uses: actions/checkout@v4
        with:
          repository: LedFx/LedFx
          ref: main
          
      - name: Install mbedtls
        id: instal-poetry
        # run: echo "::set-output name=step2value::world"
        run: |
          brew install mbedtls@2
    
      - name: Setup mbedtls path for osx-arm64
        id: mbedtls-path
        run: |
         /usr/bin/clang --version
         echo "/opt/homebrew/opt/mbedtls@2/bin" >> $GITHUB_PATH

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install LedFx
        run: |
            export LDFLAGS="-L/opt/homebrew/opt/mbedtls@2/lib"
            export CPPFLAGS="-I/opt/homebrew/opt/mbedtls@2/include"
            uv sync --all-extras --dev

      - name: Check LedFx launches
        run: |
          uv run ledfx --ci-smoke-test -vv -c debug_config --offline      
