name: Build artifacts

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
  workflow_dispatch:

#  BINARY_NAME: LedFx-${{ matrix.os }}-${{ matrix.arch }}


jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    env:
      GHCR_SLUG: ghcr.io/ledfx/ledfx_v3
      PLATFORMS: linux/amd64,linux/arm64
      BINARY_NAME: LedFx-${{ matrix.os }}-${{ matrix.arch }}
    defaults:
      run:
        shell: '${{ matrix.shell }} {0}'
    strategy:
      matrix:
        include:
          - runner: macos-latest
            name: Macos-Build amd64
            shell: bash
            os: darwin
            arch: amd64

          - runner: macos-latest
            name: Macos-Build arm64
            shell: bash
            os: darwin
            arch: arm64

          - runner: ubuntu-latest
            name: Linux-Build amd64
            shell: bash
            platform: linux/amd64
            os: linux
            arch: amd64
            
          - runner: ubuntu-latest
            name: Linux-Build arm64
            shell: bash
            platform: linux/arm64
            os: linux
            arch: arm64
                        
          - runner: ubuntu-latest
            name: Linux-Build armhf
            shell: bash
            platform: linux/arm/v7
            os: linux
            arch: armhf
                    
          - runner: ubuntu-latest
            name: Linux-Build armel
            shell: bash
            platform: linux/arm/v6
            os: linux
            arch: armel
                           
          - runner: windows-latest
            name: Windows-Build AMD64
            shell: msys2
            os: windows
            arch: amd64
    if: ${{ matrix.runner }} == 'windows-latest'
    steps:

    - name: Set up Build Environment 
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64

    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        submodules: true
#    - name: Get Build Matrix Info and Set Variables
#      run: |
#        export BINARY_NAME=LedFx-${{ matrix.os }}-${{ matrix.arch }}
#        echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

    - name: Write Env On Windows
      run: |
        env
        printenv > $BINARY_NAME

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.BINARY_NAME }}-${{ github.sha }}
        path: ${{ env.BINARY_NAME }}

    if: ${{ matrix.runner }} !== 'windows-latest'
    steps:


    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        submodules: true
#    - name: Get Build Matrix Info and Set Variables
#      run: |
#        export BINARY_NAME=LedFx-${{ matrix.os }}-${{ matrix.arch }}
#        echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

    - name: Write Env In Linux and Darwin
      run: |
        env
        printenv > $BINARY_NAME

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.BINARY_NAME }}-${{ github.sha }}
        path: ${{ env.BINARY_NAME }}